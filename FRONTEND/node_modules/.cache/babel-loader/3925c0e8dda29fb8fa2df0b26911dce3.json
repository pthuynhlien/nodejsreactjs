{"ast":null,"code":"var _jsxFileName = \"D:\\\\NODE_REACT\\\\FRONTEND\\\\product_manager_frontend\\\\src\\\\components\\\\App.js\";\nimport './App.css';\nimport HeadTitle from './HeadTitle';\nimport Product from './Product';\nimport React, { Component } from 'react';\n\nconst axios = require('axios');\n\nfunction getJSON() {\n  // To make the function blocking we manually create a Promise.\n  return new Promise(function (resolve) {\n    axios.get('/getdata01').then(function (json) {\n      // The data from the request is available in a .then block\n      // We return the result using resolve.\n      resolve(json);\n    });\n  });\n} // async function getProductData() {\n//   // The await keyword saves us from having to write a .then() block.\n//   let res = await axios.get('/getdata01');\n//   // The result of the GET request is available in the json variable.\n//   // We return it just like in a regular synchronous function.\n//   return res.data;\n// }\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.printData = () => {\n      if (this.state.data !== null) {\n        return this.state.data.map((value, key) => React.createElement(Product, {\n          key: key,\n          product_name: value.product_name,\n          product_price: value.product_price,\n          image: value.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.state = {\n      data: null\n    };\n  }\n\n  componentWillMount() {\n    console.log(getJSON()); // if(this.state.data === null){\n    //   getProductData().then( function(res) {\n    //     this.setState({\n    //       data : res\n    //     });\n    // });\n    // }\n  }\n\n  render() {\n    console.log(this.state.data);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(HeadTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.printData())));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\NODE_REACT\\FRONTEND\\product_manager_frontend\\src\\components\\App.js"],"names":["HeadTitle","Product","React","Component","axios","require","getJSON","Promise","resolve","get","then","json","App","constructor","props","printData","state","data","map","value","key","product_name","product_price","image","componentWillMount","console","log","render"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,SAAP,MAAsB,aAAtB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,SAASC,OAAT,GAAmB;AAEjB;AACA,SAAO,IAAIC,OAAJ,CAAa,UAASC,OAAT,EAAkB;AAClCJ,IAAAA,KAAK,CAACK,GAAN,CAAU,YAAV,EACKC,IADL,CACW,UAASC,IAAT,EAAe;AAElB;AACA;AACAH,MAAAA,OAAO,CAACG,IAAD,CAAP;AACH,KANL;AAOH,GARM,CAAP;AASD,C,CAED;AAEA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAC1BU,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAkBlBC,SAlBkB,GAkBN,MAAM;AAChB,UAAG,KAAKC,KAAL,CAAWC,IAAX,KAAoB,IAAvB,EAA4B;AAC1B,eAAO,KAAKD,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoB,CAACC,KAAD,EAAQC,GAAR,KAEvB,oBAAC,OAAD;AACM,UAAA,GAAG,EAAIA,GADb;AAEM,UAAA,YAAY,EAAID,KAAK,CAACE,YAF5B;AAGM,UAAA,aAAa,EAAIF,KAAK,CAACG,aAH7B;AAIM,UAAA,KAAK,EAAIH,KAAK,CAACI,KAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFG,CAAP;AAUD;AACF,KA/BiB;;AAEhB,SAAKP,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAG;AADI,KAAb;AAGD;;AAEDO,EAAAA,kBAAkB,GAAE;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYpB,OAAO,EAAnB,EADkB,CAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAiBDqB,EAAAA,MAAM,GAAG;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWC,IAAvB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,SAAL,EADH,CADJ,CAFF,CADF;AAUD;;AA9CyB;;AAiD5B,eAAeH,GAAf","sourcesContent":["import './App.css';\nimport HeadTitle from './HeadTitle';\n\nimport Product from './Product';\n\nimport React, { Component } from 'react';\nconst axios = require('axios');\nfunction getJSON() {\n\n  // To make the function blocking we manually create a Promise.\n  return new Promise( function(resolve) {\n      axios.get('/getdata01')\n          .then( function(json) {\n\n              // The data from the request is available in a .then block\n              // We return the result using resolve.\n              resolve(json);\n          });\n  });\n}\n\n// async function getProductData() {\n\n//   // The await keyword saves us from having to write a .then() block.\n//   let res = await axios.get('/getdata01');\n\n//   // The result of the GET request is available in the json variable.\n//   // We return it just like in a regular synchronous function.\n//   return res.data;\n// }\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      data : null\n    }\n  }\n\n  componentWillMount(){\n    console.log(getJSON());\n    // if(this.state.data === null){\n    //   getProductData().then( function(res) {\n    //     this.setState({\n    //       data : res\n    //     });\n    // });\n    // }\n  }\n\n  printData = () => {\n    if(this.state.data !== null){\n      return this.state.data.map((value, key) => \n        (\n          <Product \n                key = {key}\n                product_name = {value.product_name}\n                product_price = {value.product_price}\n                image = {value.image}>\n                </Product>\n        )\n      )\n    }\n  }\n\n  render() {\n    console.log(this.state.data);\n    return (\n      <div>\n        <HeadTitle></HeadTitle>\n        <div className=\"container\">\n            <div className=\"row\">\n              {this.printData()}\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}